#include <iostream>

void swap(int* a, int* b)
{
	int tmp = *a;
	*a = *b;
	*b = tmp;
}

int partition(int arr[], int low, int high)
{
	//we choose last element as pivot
	int pivot = arr[high];

	//index of smaller element
	int i = low - 1;

	//traverse the arr
	for (int j = low; j < high; j++)
	{
		//if the current element is smaller than the pivot		
		if (arr[j] < pivot)
		{
			//we move the index of the smaller element
			i++;
			//and swap the new found small element with the one next to the first smaller
			swap(&arr[i], &arr[j]);
			/*
			Example:
			arr = [1, 3, 20, 2, 10, 4, 5]
			pivot is 5
			arr[j] = 2 < 5
			arr[i] = 20
			arr = [1, 3, 2, 20, 10, 4, 5]
			*/

		}
	}
	swap(&arr[i + 1], &arr[high]);
	return (i + 1);
}

void quickSort(int arr[], int low, int high)
{
	if (low < high)
	{
		int pi = partition(arr, low, high); //dividing the arr in two parts
		quickSort(arr, low, pi - 1);
		quickSort(arr, pi + 1, high);
	}
}

int main()
{
	int count;
	std::cin >> count;

	int *arr = new int[count];

	for (size_t i = 0; i < count; i++)
	{
		std::cin >> arr[i];
	}

	quickSort(arr, 0, count - 1);

	for (size_t i = 0; i < count; i++)
	{
		std::cout << arr[i] << " ";
	}

	system("pause");
	return 0;
}
